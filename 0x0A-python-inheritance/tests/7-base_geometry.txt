>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry


>>> BaseGeometry().integer_validator("hola", "5")
Traceback (most recent call last):
TypeError: hola must be an integer

>>> BaseGeometry().integer_validator("adios", 0)
Traceback (most recent call last):
ValueError: adios must be greater than 0

>>> BaseGeometry().integer_validator("", "5")
Traceback (most recent call last):
TypeError:  must be an integer

>>> BaseGeometry().integer_validator("my_int", 0)
Traceback (most recent call last):
ValueError: my_int must be greater than 0

>>> BaseGeometry().area()
Traceback (most recent call last):
Exception: area() is not implemented

>>> BaseGeometry().integer_validator("hola", [1, 2, 3])
Traceback (most recent call last):
TypeError: hola must be an integer

>>> BaseGeometry().integer_validator("bool", True)
Traceback (most recent call last):
TypeError: list must be an integer

>>> BaseGeometry().integer_validator("adios")
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> BaseGeometry().integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> BaseGeometry().integer_validator("my_int", None)
Traceback (most recent call last):
TypeError: my_int must be an integer

>>> BaseGeometry().integer_validator("my_int", {2, 1})
Traceback (most recent call last):
TypeError: my_int must be an integer

>>> BaseGeometry().integer_validator("my_int", (1,2))
Traceback (most recent call last):
TypeError: my_int must be an integer